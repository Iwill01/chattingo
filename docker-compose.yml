services:
  dbservice:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-chattingo_db}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    networks:
      - chattingo-network
    restart: unless-stopped

  backend:
    depends_on:
      dbservice:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://dbservice:3306/chattingo_db?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
    ports:
      - "8080:8080"
    networks:
      - chattingo-network
    healthcheck:
      test: ["CMD", "java", "-version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: "https://masim01.shop/api"
        REACT_APP_WS_URL: "wss://masim01.shop/ws"
    networks:
      - chattingo-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

  nginx-proxy:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - chattingo-network
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

networks:
  chattingo-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local

